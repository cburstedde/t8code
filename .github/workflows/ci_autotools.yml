name: CI for Autotools

# This script is derived from ci.yml of p4est

on: [push, pull_request]

jobs:

  linux-multi:
    runs-on: ubuntu-latest
    name: Autotools build on Linux
    steps:
    - name: Install system dependencies
      run: |
        sudo apt-get update -yq
        sudo apt-get install -yq --no-install-recommends \
            zlib1g-dev libmpich-dev mpich pandoc
    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Run bootstrap script
      run: ./bootstrap
    - name: Make check with debug, without shared
      shell: bash
      run: |
        DIR="checkdebug_static" && mkdir -p "$DIR" && cd "$DIR"
        ../configure --disable-shared --enable-debug \
            CFLAGS="-O0 -g -Wall"
        make -j V=0
        make -j check V=0
        cd ..
    - name: Make check with MPI and debug
      shell: bash
      run: |
        DIR="checkMPIdebug" && mkdir -p "$DIR" && cd "$DIR"
        ../configure --enable-mpi --enable-debug \
            CFLAGS="-O0 -g -Wall"
        make -j V=0
        make -j check V=0
        cd ..
    - name: Make check with MPI, without debug
      shell: bash
      run: |
        DIR="checkMPI" && mkdir -p "$DIR" && cd "$DIR"
        ../configure --enable-mpi \
            CFLAGS="-O2"
        make -j V=0
        make -j check V=0
        cd ..
    - name: Make check with MPI, debug and C++ compiler
      shell: bash
      run: |
        DIR="checkMPIdebugCXX" && mkdir -p "$DIR" && cd "$DIR"
        ../configure --enable-mpi --enable-debug \
            CFLAGS="-O0" CC=mpicxx
        make -j V=0
        make -j check V=0
        cd ..
    - name: Make distcheck without MPI and debug
      shell: bash
      run: |
        DIR="distcheck" && mkdir -p "$DIR" && cd "$DIR"
        ../configure
        make -j distcheck V=0
        cd ..
    - name: Save test suite log
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test_suite_log
        path: ./**/test-suite.log

  linux-install:
    runs-on: ubuntu-latest
    name: Make install on Linux
    steps:
    - name: Install system dependencies
      run: |
        sudo apt-get update -yq
        sudo apt-get install -yq --no-install-recommends \
            zlib1g-dev libmpich-dev mpich pandoc
    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Fix libsc to version 2.8.3
      shell: bash
      run: (cd sc && git fetch --tags && git checkout v2.8.3)
    - name: Fix p4est to version 2.8
      shell: bash
      run: (cd p4est && git fetch --tags && git checkout v2.8)
    - name: Run bootstrap script
      run: ./bootstrap
    - name: Install libsc with debug, without shared
      shell: bash
      run: |
        DIR="sc-checkdebug_static" && mkdir -p "$DIR" && cd "$DIR"
        ../sc/configure --disable-shared --enable-debug \
            CFLAGS="-O0 -g -Wall -pedantic"
        make -j V=0
        make -j check V=0
        make -j install V=0
        cd ..
        rm -rf sc/
    - name: Install p4est with debug, without shared
      shell: bash
      run: |
        DIR="p4est-checkdebug_static" && mkdir -p "$DIR" && cd "$DIR"
        ../p4est/configure --disable-shared --enable-debug \
            --with-sc="$PWD/../sc-checkdebug_static/local" \
            CFLAGS="-O0 -g -Wall -pedantic"
        make -j V=0
        make -j check V=0
        make -j install V=0
        cd ..
        rm -rf sc/
    - name: Install t8code with debug, without shared
      shell: bash
      run: |
        DIR="t8code-checkdebug_static" && mkdir -p "$DIR" && cd "$DIR"
        ../configure --disable-shared --enable-debug \
            --with-sc="$PWD/../sc-checkdebug_static/local" \
            --with-p4est="$PWD/../p4est-checkdebug_static/local" \
            CFLAGS="-O0 -g -Wall -pedantic"
        make -j V=0
        make -j check V=0
        make -j install V=0
        cd ..

  linux-tarball:
    runs-on: ubuntu-latest
    name: Pack tarball on Linux
    steps:
    - name: Install system dependencies
      run: |
        sudo apt-get update -yq
        sudo apt-get install -yq --no-install-recommends \
            zlib1g-dev libmpich-dev mpich pandoc
    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
    - name: Identify version
      shell: bash
      run: |
        git tag
        git describe --abbrev=4 --match 'v*'
    - name: Run bootstrap script
      run: ./bootstrap
    - name: Configure and make
      shell: bash
      run: |
        DIR="tarball" && mkdir -p "$DIR" && cd "$DIR"
        ../configure --enable-mpi --enable-debug \
            CFLAGS="-O0 -g -pedantic -Wall -Wextra -Werror \
                    -Wno-unused-parameter -Wno-type-limits \
                    -Wno-builtin-declaration-mismatch \
                    -Wno-implicit-fallthrough"
        make -j V=0
        make -j check V=0
        make -j distcheck V=0
        mv t8code-*.tar.gz ..
        cd ..
    - name: Save tarball
      uses: actions/upload-artifact@v2
      with:
        name: t8code_tarball
        path: ./t8code-*.tar.gz
